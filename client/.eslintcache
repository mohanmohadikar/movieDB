[{"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/index.js":"1","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/RegisterPage/RegisterPage.js":"2","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/hoc/auth.js":"3","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_reducers/index.js":"4","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/NavBar/Sections/LeftMenu.js":"5","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_actions/types.js":"6","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/LoginPage/LoginPage.js":"7","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_reducers/user_reducer.js":"8","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/Config.js":"9","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/NavBar/NavBar.js":"10","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/Footer/Footer.js":"11"},{"size":1187,"mtime":1596616099000,"results":"12","hashOfConfig":"13"},{"size":6254,"mtime":1596616099000,"results":"14","hashOfConfig":"13"},{"size":1455,"mtime":1596616099000,"results":"15","hashOfConfig":"13"},{"size":157,"mtime":1596616099000,"results":"16","hashOfConfig":"13"},{"size":703,"mtime":1596616099000,"results":"17","hashOfConfig":"13"},{"size":166,"mtime":1596616099000,"results":"18","hashOfConfig":"13"},{"size":5123,"mtime":1611227558465,"results":"19","hashOfConfig":"13"},{"size":533,"mtime":1596616099000,"results":"20","hashOfConfig":"13"},{"size":57,"mtime":1596616099000,"results":"21","hashOfConfig":"13"},{"size":1344,"mtime":1611227626305,"results":"22","hashOfConfig":"13"},{"size":391,"mtime":1611227654248,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1qvckgr",{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/index.js",[],["49","50"],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/RegisterPage/RegisterPage.js",["51","52"],"import React from \"react\";\nimport moment from \"moment\";\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { registerUser } from \"../../../_actions/user_actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport {\n  Form,\n  Input,\n  Button,\n} from 'antd';\n\nconst formItemLayout = {\n  labelCol: {\n    xs: { span: 24 },\n    sm: { span: 8 },\n  },\n  wrapperCol: {\n    xs: { span: 24 },\n    sm: { span: 16 },\n  },\n};\nconst tailFormItemLayout = {\n  wrapperCol: {\n    xs: {\n      span: 24,\n      offset: 0,\n    },\n    sm: {\n      span: 16,\n      offset: 8,\n    },\n  },\n};\n\nfunction RegisterPage(props) {\n  const dispatch = useDispatch();\n  return (\n\n    <Formik\n      initialValues={{\n        email: '',\n        lastName: '',\n        name: '',\n        password: '',\n        confirmPassword: ''\n      }}\n      validationSchema={Yup.object().shape({\n        name: Yup.string()\n          .required('Name is required'),\n        lastName: Yup.string()\n          .required('Last Name is required'),\n        email: Yup.string()\n          .email('Email is invalid')\n          .required('Email is required'),\n        password: Yup.string()\n          .min(6, 'Password must be at least 6 characters')\n          .required('Password is required'),\n        confirmPassword: Yup.string()\n          .oneOf([Yup.ref('password'), null], 'Passwords must match')\n          .required('Confirm Password is required')\n      })}\n      onSubmit={(values, { setSubmitting }) => {\n        setTimeout(() => {\n\n          let dataToSubmit = {\n            email: values.email,\n            password: values.password,\n            name: values.name,\n            lastname: values.lastname,\n            image: `http://gravatar.com/avatar/${moment().unix()}?d=identicon`\n          };\n\n          dispatch(registerUser(dataToSubmit)).then(response => {\n            if (response.payload.success) {\n              props.history.push(\"/login\");\n            } else {\n              alert(response.payload.err.errmsg)\n            }\n          })\n\n          setSubmitting(false);\n        }, 500);\n      }}\n    >\n      {props => {\n        const {\n          values,\n          touched,\n          errors,\n          dirty,\n          isSubmitting,\n          handleChange,\n          handleBlur,\n          handleSubmit,\n          handleReset,\n        } = props;\n        return (\n          <div className=\"app\">\n            <h2>Sign up</h2>\n            <Form style={{ minWidth: '375px' }} {...formItemLayout} onSubmit={handleSubmit} >\n\n              <Form.Item required label=\"Name\">\n                <Input\n                  id=\"name\"\n                  placeholder=\"Enter your name\"\n                  type=\"text\"\n                  value={values.name}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.name && touched.name ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.name && touched.name && (\n                  <div className=\"input-feedback\">{errors.name}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Last Name\">\n                <Input\n                  id=\"lastName\"\n                  placeholder=\"Enter your Last Name\"\n                  type=\"text\"\n                  value={values.lastName}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.lastName && touched.lastName ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.lastName && touched.lastName && (\n                  <div className=\"input-feedback\">{errors.lastName}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Email\" hasFeedback validateStatus={errors.email && touched.email ? \"error\" : 'success'}>\n                <Input\n                  id=\"email\"\n                  placeholder=\"Enter your Email\"\n                  type=\"email\"\n                  value={values.email}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.email && touched.email ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.email && touched.email && (\n                  <div className=\"input-feedback\">{errors.email}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Password\" hasFeedback validateStatus={errors.password && touched.password ? \"error\" : 'success'}>\n                <Input\n                  id=\"password\"\n                  placeholder=\"Enter your password\"\n                  type=\"password\"\n                  value={values.password}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.password && touched.password ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.password && touched.password && (\n                  <div className=\"input-feedback\">{errors.password}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item required label=\"Confirm\" hasFeedback>\n                <Input\n                  id=\"confirmPassword\"\n                  placeholder=\"Enter your confirmPassword\"\n                  type=\"password\"\n                  value={values.confirmPassword}\n                  onChange={handleChange}\n                  onBlur={handleBlur}\n                  className={\n                    errors.confirmPassword && touched.confirmPassword ? 'text-input error' : 'text-input'\n                  }\n                />\n                {errors.confirmPassword && touched.confirmPassword && (\n                  <div className=\"input-feedback\">{errors.confirmPassword}</div>\n                )}\n              </Form.Item>\n\n              <Form.Item {...tailFormItemLayout}>\n                <Button onClick={handleSubmit} type=\"primary\" disabled={isSubmitting}>\n                  Submit\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        );\n      }}\n    </Formik>\n  );\n};\n\n\nexport default RegisterPage\n","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/hoc/auth.js",["53"],"/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from 'react';\nimport { auth } from '../_actions/user_actions';\nimport { useSelector, useDispatch } from \"react-redux\";\n\nexport default function (SpecificComponent, option, adminRoute = null) {\n    function AuthenticationCheck(props) {\n\n        let user = useSelector(state => state.user);\n        const dispatch = useDispatch();\n\n        useEffect(() => {\n            //To know my current status, send Auth request \n            dispatch(auth()).then(response => {\n                //Not Loggined in Status \n                if (!response.payload.isAuth) {\n                    if (option) {\n                        props.history.push('/login')\n                    }\n                    //Loggined in Status \n                } else {\n                    //supposed to be Admin page, but not admin person wants to go inside\n                    if (adminRoute && !response.payload.isAdmin) {\n                        props.history.push('/')\n                    }\n                    //Logged in Status, but Try to go into log in page \n                    else {\n                        if (option === false) {\n                            props.history.push('/')\n                        }\n                    }\n                }\n            })\n\n        }, [])\n\n        return (\n            <SpecificComponent {...props} user={user} />\n        )\n    }\n    return AuthenticationCheck\n}\n\n\n","/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_reducers/index.js",[],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/NavBar/Sections/LeftMenu.js",[],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_actions/types.js",[],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/LoginPage/LoginPage.js",["54","55"],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/_reducers/user_reducer.js",["56"],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/Config.js",[],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/NavBar/NavBar.js",[],"/Users/mohanmohadikar/Documents/GitHub/movieDB/client/src/components/views/Footer/Footer.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":92,"column":11,"nodeType":"63","messageId":"64","endLine":92,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":97,"column":11,"nodeType":"63","messageId":"64","endLine":97,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":6,"column":1,"nodeType":"68","endLine":42,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":75,"column":11,"nodeType":"63","messageId":"64","endLine":75,"endColumn":16},{"ruleId":"61","severity":1,"message":"65","line":80,"column":11,"nodeType":"63","messageId":"64","endLine":80,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":9,"column":1,"nodeType":"68","endLine":22,"endColumn":2},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'dirty' is assigned a value but never used.","Identifier","unusedVar","'handleReset' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]